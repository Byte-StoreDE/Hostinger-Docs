<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd"
       title="Autowired" id="Autowired">
    <web-summary>
        Explore how to access service or component classes using the Spring annotation @Autowired. Learn about the
        current limitations and static workarounds for using @Autowired.
    </web-summary>

    <p>The Spring annotation <code>@Autowired</code> can be used to access service or component classes.</p>
    <p>
        For technical reasons, the <code>@Autowired</code> annotation can currently only be used for internal module
        service classes.
    </p>
    <p>
        There is currently a static workaround for services from the core.
    </p>

    <compare type="left-right" first-title="Autowire Module internal Service" second-title="Autowire Core Service">
        <code-block src="../code/bean-autowired.java" lang="java"/>

        <code-block src="../code/static-autowired.java" lang="java"/>
    </compare>

    <p>
        For example, if you create the module "ProxMox" with the component <code>ProxMoxPool</code>, you can use
        Autowire within your module to access <code>ProxMoxPool</code>.
        <br/><br/>
        However, if you want to access beans such as <code>ModuleService</code> from the core of Hostinger, you need to
        use the <code>AutowireLoader</code>.
    </p>
</topic>